// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-02-05 16:10:16.702076 +0900 JST m=+0.062988143

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "hiromisuzuki/clean-arch-example generated docs.",
        "title": "clean architecture example",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/users": {
            "get": {
                "description": "[sample] get Users",
                "produces": [
                    "application/json"
                ],
                "summary": "[sample] Show Users",
                "parameters": [
                    {
                        "type": "number",
                        "description": "page of results to return. default is 1.",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "number of records to return in one request, specified as an integer from 1 to 100. default is 100.",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Users"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/infrastructure.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "[sample] Create a User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "[sample] Create a User",
                "parameters": [
                    {
                        "description": "User Mail Address",
                        "name": "mail_address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/infrastructure.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/infrastructure.Error"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "[sample] get User by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "[sample] Show a User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/infrastructure.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/infrastructure.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "infrastructure.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "required": [
                "mail_address"
            ],
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2017-07-21T17:32:28Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "mail_address": {
                    "type": "string",
                    "example": "test@clean-arch-example.com"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2017-07-21T17:32:28Z"
                }
            }
        },
        "model.Users": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
